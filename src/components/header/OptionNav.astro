---
interface Props {
  option?: "anchor" | "btn";
  content: string;
  href?: string;
}
const { option = "anchor", content, href } = Astro.props;
---

<li class="literal">
  {
    option === "anchor" ? (
      <a class="a-literal" href={href}>
        <figure class="figure-icon">
          <slot name="icon-literal" />
        </figure>
        <span>{content}</span>
      </a>
    ) : (
      <button class="btn-literal">
        <figure class="figure-icon">
          <slot name="icon-literal" />
        </figure>
        <span>{content}</span>
        <figure class="figure-arrow">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 24 24"
            fill="currentColor"
          >
            <path d="M18.71 8.21a1 1 0 0 0-1.42 0l-4.58 4.58a1 1 0 0 1-1.42 0L6.71 8.21a1 1 0 0 0-1.42 0 1 1 0 0 0 0 1.41l4.59 4.59a3 3 0 0 0 4.24 0l4.59-4.59a1 1 0 0 0 0-1.41Z" />
          </svg>
        </figure>
      </button>
    )
  }
</li>

<style>
  .literal {
    width: 100%;
  }

  .a-literal,
  .btn-literal {
    position: relative;
    overflow: hidden;
    width: 100%;
    cursor: pointer;
    color: var(--color_letters);
    font-family: var(--font_workSans);
    font-size: medium;
    display: flex;
    align-items: center;
    gap: 1rem;
    padding: 0.6rem 1rem;
    border-radius: 0.6rem;
    text-transform: capitalize;
    transition: background-color 300ms;

    &:hover {
      background-color: #ffffff20;
    }
  }

  .a-literal::before,
  .btn-literal::before {
    content: "";
    width: 4px;
    height: 100%;
    position: absolute;
    top: 0;
    left: 0;
    transition: background-color 300ms;
  }

  .a-literal:hover::before,
  .btn-literal:hover::before {
    background-color: var(--color_primary);
  }

  .figure-icon,
  .figure-arrow {
    width: 1.25rem;
    display: grid;
    place-content: center;
  }

  .figure-arrow {
    svg {
      width: 100%;
      fill: var(--color_letters);
    }
  }
  @media (min-width: 768px) {
    .a-literal,
    .btn-literal {
      padding: 0.5rem 0.7rem;
      gap: 0.5rem;
    }
  }
</style>
